@using Sector45_Bank.Data;
@using Sector45_Bank.Models;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div>
    <div class="col-xs-1"></div>
    <div class="col-xs-10" style="margin-top:50px;margin-bottom:250px; background-color:orange ;border-radius:4px;box-shadow:2px 2px 6px #000">
        <div class="row navbar-bootsnipp animate" style="text-align:center;margin-top:10px">
            <a class="col-xs-6 animate hgsHome" type="button" href="#" style="background-color:white;height:40px;padding-top:10px;border:2px solid lightblue">Hgs Kartlarım</a>
            <a class="col-xs-6 animate addHgs" type="button" href="#" style="background-color:white;height:40px;padding-top:10px;border:2px solid lightBlue">Hgs Ekle</a>
        </div>
        <div id="hgsCard" style="background-color:white;margin-top:10px">

            @if (Tkn.hgsCards != null && Tkn.hgsCards.Count != 0)
            {
                <div class="container">
                    <div class="row">
                        <div class="col-md-12">
                            <div id="my-carousel" class="carousel slide" data-ride="carousel">
                                <div class="carousel-inner" role="listbox">
                                    @if (Tkn.hgsCards != null)
                                    {
                                        var i = 1;
                                        foreach (Card account in Tkn.hgsCards)
                                        {
                                            if (i == 1)
                                            {
                                                <div id="@account.cardId" class="card-container centermx drop-shadow lifted item active">
                                                    <div class="card">
                                                        <div class="card-header ">
                                                            <p align="center">@account.cardId</p>
                                                        </div>
                                                        <div class="card-body">
                                                            <p>Balance</p><hr />
                                                            <p>@account.balance</p>
                                                        </div>
                                                        <div class="card-footer condensed">
                                                            <div class="btn-group" role="group" aria-label="Basic example">
                                                                <button type="button" class="btn btn-primary cardTran" name="@account.cardId">Transactions</button>
                                                                <button type="button" class="btn btn-primary cardDeposit" name="@account.cardId">Deposit</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div id="@account.cardId" class="card-container centermx drop-shadow lifted item">
                                                    <div class="card">
                                                        <div class="card-header ">
                                                            <p align="center">@account.cardId</p>
                                                        </div>
                                                        <div class="card-body">
                                                            <p>Balance</p><hr />
                                                            <p>@account.balance</p>
                                                        </div>
                                                        <div class="card-footer condensed">
                                                            <div class="btn-group" role="group" aria-label="Basic example">
                                                                <button type="button" class="btn btn-primary cardTran" name="@account.cardId">Transactions</button>
                                                                <button type="button" class="btn btn-primary cardDeposit" name="@account.cardId">Deposit</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            i++;
                                        }
                                    }

                                </div>

                                <a class="left carousel-control" href="#my-carousel" role="button" data-slide="prev">
                                    <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="right carousel-control" href="#my-carousel" role="button" data-slide="next">
                                    <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="col-xs-4"></div>
                <div class="card text-center col-xs-4" style="margin-top:10px">
                    <div class="card-header">
                        Uyarı
                    </div>
                    <div class="card-body" style="background-color:white">
                        <h5 class="card-title">Your hgs cards were not found</h5>
                        <p class="card-text"> If you want to open a card, click the button below.</p>
                        <a href="#" class="btn btn-primary addHgs">Add Hgs</a>
                    </div>
                </div>
                <div class="col-xs-4"></div>
            }
        </div>
        <div id="addHgsCard" style="margin-top:10px">
            <div class="col-xs-4">
                <div style="color:#721c24">
                    <p>* Select a payment account</p>
                    <p>* Enter amount to deposit</p>
                    <p>* Please enter a minimum of 20 lira!</p>
                </div>
            </div>
            <div class="col-xs-4">
                <ul id="no3" class="list-group">
                    @if (Tkn.accounts != null && Tkn.accounts.Count != 0)
                    {
                        foreach (Account item in Tkn.accounts)
                        {
                            if (item.isActive)
                            {
                                <li class="selectedAccount list-group-item " name="@item.accountNo" style="text-align:center">Account No:@item.accountNo ; Balance:@item.balance.ToString()</li>
                            }
                        }
                    }
                </ul>
                <input id="amount" type="text" maxlength="10" placeholder="Amount" class="col-xs-12" style="height:34px;margin-bottom:10px" onkeypress="return event.charCode>= 48 &&event.charCode<= 57||event.charCode==44" />
                <button id="addcardhgs" type="button" class="btn btn-success col-xs-12" style="margin-bottom:10px">Create</button>
            </div>
        </div>
        <div id="CardDeposit" style="margin-top:10px">
            <div class="col-xs-4">
                <div style="color:#721c24">
                    <p>* Select a payment account</p>
                    <p>* Enter amount to deposit</p>
                </div>
            </div>
            <div class="col-xs-4">
                <ul id="no4" class="list-group">
                    @if (Tkn.accounts != null && Tkn.accounts.Count != 0)
                    {
                        foreach (Account item in Tkn.accounts)
                        {
                            if (item.isActive)
                            {
                                <li class="selectedAccount list-group-item " name="@item.accountNo" style="text-align:center">Account No:@item.accountNo ; Balance:@item.balance.ToString()</li>
                            }
                        }
                    }
                </ul>
                <input id="amount2" type="text" maxlength="10" placeholder="Amount" class="col-xs-12" style="height:34px;margin-bottom:10px" onkeypress="return event.charCode>= 48 &&event.charCode<= 57||event.charCode==44" />
                <button id="carddep" type="button" class="btn btn-success col-xs-12" style="margin-bottom:10px">Deposit</button>
            </div>
        </div>
        <div class="row " id="cardOperations" style="margin-top:10px">
            <div class="col-xs-1"></div>
            <div class="col-xs-10" style="background-color:white;margin-bottom:10px;border-radius:10px">
                @if (Tkn.hgsOperations != null)
                {
                    <p class="col-xs-12 text-center">Transaction History</p>
                    if (Tkn.hgsOperations.Count != 0)
                    {
                        <table id="table" class="table table-dark">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Amount</th>
                                    <th scope="col">Date</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (Operation item in Tkn.hgsOperations)
                                {
                                    <tr>
                                        <th scope="row">-</th>
                                        <td>Amount:@item.amount.ToString()</td>
                                        <td>Date:@item.date.ToShortDateString()</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    { <p style="text-align:center">No records found for the selected account!</p>}
                }
            </div>
            <div class="col-xs-1"></div>
        </div>
    </div>
    <div class="col-xs-1"></div>
</div>

<script>
    $(function () {
        $("#CardDeposit").hide(1);
        $("#hgsCard").show(1);
        $("#addHgsCard").hide(1);
        $("#cardOperations").show(1);
        $(".hgsHome").click(function () {
            window.location = '/Hgs/Index/';
        });
        $(".selectedAccount").click(function () {
            $("li.selectedAccount").removeClass("active");
            $(this).addClass("active");
        });
        $("#addcardhgs").click(function () {
            var amount = $("#amount").val();
            if (parseInt(amount) <= 19) {
                alertify.error("Please enter a minimum of 20 lira!");
            }
            else {
                var accountNo = $("ul#no3 li.active").attr("name");
                console.log($(".active"));
                if (accountNo !== null && amount !== "") {
                    $.ajax({
                        type: 'POST',
                        url: '/Hgs/add/',
                        data: { no: accountNo, amount: amount },
                        success: function (res) {
                            if (JSON.parse(res).status) {
                                $.ajax({
                                    type: 'GET',
                                    url: '/Account/account',
                                    success: function (res) {
                                        if (JSON.parse(res).status) {
                                        } else {
                                        }
                                    }
                                });
                                $.ajax({
                                    type: 'GET',
                                    url: '/Hgs/cards',
                                    success: function (res) {
                                        if (JSON.parse(res).status) {
                                            addhgs(winlocaltion3);
                                        } else {
                                            alertify.error("Hgs Card Not Created");
                                        }
                                    }
                                });
                            }
                            else {
                                alertify.error("Hgs Card Not Created");
                            }
                        },
                        error: function () { alertify.error("Hgs Card Not Created");}
                    });
                } else { alertify.error("Fill in the fields") }
            }
            
        });
        $(".addHgs").click(function () {
            $("#hgsCard").hide(1);
            $("#addHgsCard").show(1);
            $("#cardOperations").hide(1);
            $("#CardDeposit").hide(1);
        });
        $(".cardTran").click(function () {
            var cardNo = this.getAttribute("name");
            $.ajax({
                type: 'POST',
                url: '/Hgs/operation/',
                data: { no: cardNo },
                success: function (res) {
                    if (JSON.parse(res).status) {
                        window.location = "/Hgs/Index/";
                    } else {
                        alertify.error("Can't get dashboard");
                    }
                },
                error: function () {
                    alertify.error("Can't get dashboard");
                }
            });
        });
        $(".cardDeposit").click(function () {
            $(this).addClass("selectedCard");
            $("#cardOperations").hide(1);
            $("#hgsCard").hide(1);
            $("#addHgsCard").hide(1);
            $("#CardDeposit").show(1);
        });
        $("#carddep").click(function () {
            var amount = $("#amount2").val();
            var accountNo = $("ul#no4 li.active").attr("name");
            var cardNo = $(".selectedCard").attr("name");
            if (accountNo !== null && amount !== "" && cardNo !== null) {
                $.ajax({
                    type: 'POST',
                    url: '/Hgs/deposit/',
                    data: { amount: amount, accountNo: accountNo, cardNo: cardNo },
                    success: function (res) {
                        if (JSON.parse(res).status) {
                            $.ajax({
                                type: 'GET',
                                url: '/Account/account',
                                success: function (res) {
                                    if (JSON.parse(res).status) {
                                    } else {
                                    }
                                }
                            });
                            $.ajax({
                                type: 'GET',
                                url: '/Hgs/cards',
                                success: function (res) {
                                    if (JSON.parse(res).status) {
                                        deposit(winlocaltion3);
                                    } else {
                                        alertify.error("The transaction has been performed but the account information cannot be found!");
                                    }
                                }
                            });
                        } else { alertify.error("Deposit not made"); }
                    },
                    error: function () { alertify.error("Deposit not made"); }
                });
            } else { alertify.error("Blank data or unselected account"); }
        });
    });
    function addhgs(callback) {
        setTimeout(() => { alertify.success("Hgs Card Created"); callback(); }, 1);
    }
    function deposit(callback) {
        setTimeout(() => { alertify.success("Deposit made"); callback(); }, 1);
    }
    function winlocaltion3() {
        setTimeout(() => { window.location = "/Hgs/Index/"; }, 3000);
    }
</script>